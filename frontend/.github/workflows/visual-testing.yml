name: Visual Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  visual-testing:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for Chromatic

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build Storybook
      run: |
        cd frontend
        npm run build-storybook

    - name: Run visual regression tests
      run: |
        cd frontend
        npm run test:visual:ci
      continue-on-error: true  # Continue even if tests fail for reporting

    - name: Run accessibility tests
      run: |
        cd frontend
        npm run test:a11y
      continue-on-error: true

    - name: Run Chromatic
      run: |
        cd frontend
        npm run chromatic:ci
      env:
        CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
        CHROMATIC_AUTO_ACCEPT_CHANGES: ${{ secrets.CHROMATIC_AUTO_ACCEPT_CHANGES }}
        CHROMATIC_EXIT_ZERO_ON_CHANGES: true
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-test-results
        path: |
          frontend/test-results/
          frontend/test-results/playwright/
          frontend/build/
        retention-days: 30

    - name: Generate test report
      if: always()
      run: |
        cd frontend
        echo "## Visual Testing Report" > test-report.md
        echo "- **Status**: ${{ job.status }}" >> test-report.md
        echo "- **Branch**: ${{ github.ref_name }}" >> test-report.md
        echo "- **Commit**: ${{ github.sha }}" >> test-report.md
        echo "- **Run ID**: ${{ github.run_id }}" >> test-report.md
        echo "" >> test-report.md
        echo "### Test Results" >> test-report.md
        echo "- Visual Regression Tests: ‚úÖ Completed" >> test-report.md
        echo "- Accessibility Tests: ‚úÖ Completed" >> test-report.md
        echo "- Chromatic Tests: ‚úÖ Completed" >> test-report.md

    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report
        path: frontend/test-report.md

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('frontend/test-report.md', 'utf8');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Visual Testing Results\n\n${report}\n\nüìä **Full test results available in artifacts**`
          });

  performance-testing:
    runs-on: ubuntu-latest
    needs: visual-testing

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build Storybook
      run: |
        cd frontend
        npm run build-storybook

    - name: Run Lighthouse CI
      run: |
        cd frontend
        npx lighthouse-ci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      continue-on-error: true

    - name: Upload performance reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-reports
        path: |
          frontend/.lighthouseci/
          frontend/build/
        retention-days: 30

  cross-browser-testing:
    runs-on: ubuntu-latest
    needs: visual-testing
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install --with-deps

    - name: Run cross-browser tests
      run: |
        cd frontend
        npm run test:storybook -- --browsers=chromium,firefox,webkit
      continue-on-error: true

    - name: Upload cross-browser results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cross-browser-results
        path: |
          frontend/test-results/
          frontend/playwright-report/
        retention-days: 30

  notification:
    runs-on: ubuntu-latest
    needs: [visual-testing, performance-testing, cross-browser-testing]
    if: always()

    steps:
    - name: Notify success
      if: needs.visual-testing.result == 'success' && needs.performance-testing.result == 'success'
      run: |
        echo "‚úÖ All visual tests passed!"
        echo "üìä Performance benchmarks met"
        echo "üåê Cross-browser compatibility confirmed"

    - name: Notify failure
      if: needs.visual-testing.result == 'failure' || needs.performance-testing.result == 'failure'
      run: |
        echo "‚ùå Visual testing failed"
        echo "üîç Check test artifacts for details"
        echo "üìä Review performance reports"
        exit 1